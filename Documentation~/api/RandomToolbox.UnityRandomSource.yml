### YamlMime:ManagedReference
items:
- uid: RandomToolbox.UnityRandomSource
  commentId: T:RandomToolbox.UnityRandomSource
  id: UnityRandomSource
  parent: RandomToolbox
  children:
  - RandomToolbox.UnityRandomSource.#ctor
  - RandomToolbox.UnityRandomSource.#ctor(RandomToolbox.SeedGenerators.Generator)
  - RandomToolbox.UnityRandomSource.#ctor(System.Int32)
  - RandomToolbox.UnityRandomSource.ColorHSV
  - RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single)
  - RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single)
  - RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - RandomToolbox.UnityRandomSource.insideUnitCircle
  - RandomToolbox.UnityRandomSource.insideUnitSphere
  - RandomToolbox.UnityRandomSource.onUnitSphere
  - RandomToolbox.UnityRandomSource.Range(System.Int32,System.Int32)
  - RandomToolbox.UnityRandomSource.Range(System.Single,System.Single)
  - RandomToolbox.UnityRandomSource.Restore(System.Random.State)
  - RandomToolbox.UnityRandomSource.rotation
  - RandomToolbox.UnityRandomSource.rotationUniform
  - RandomToolbox.UnityRandomSource.Save
  - RandomToolbox.UnityRandomSource.Start
  - RandomToolbox.UnityRandomSource.value
  langs:
  - csharp
  - vb
  name: UnityRandomSource
  nameWithType: UnityRandomSource
  fullName: RandomToolbox.UnityRandomSource
  type: Class
  source:
    id: UnityRandomSource
    path: ''
    startLine: 1313
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nSafe Random source based on UnityEngine.Random\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class UnityRandomSource : RandomSourceBase
    content.vb: >-
      <Serializable>

      Public Class UnityRandomSource
          Inherits RandomSourceBase
  inheritance:
  - System.Object
  - RandomToolbox.RandomSourceBase
  inheritedMembers:
  - RandomToolbox.RandomSourceBase.m_seed
  - RandomToolbox.RandomSourceBase.SeedGenerator
  - RandomToolbox.RandomSourceBase.Seed
  - RandomToolbox.RandomSourceBase.Start(System.Int32)
  - RandomToolbox.RandomSourceBase.Start(System.Boolean)
  - RandomToolbox.RandomSourceBase.Start(RandomToolbox.SeedGenerators.Generator)
  - RandomToolbox.RandomSourceBase.Reseed
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RandomToolbox.UnityRandomSource.#ctor
  commentId: M:RandomToolbox.UnityRandomSource.#ctor
  id: '#ctor'
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: UnityRandomSource()
  nameWithType: UnityRandomSource.UnityRandomSource()
  fullName: RandomToolbox.UnityRandomSource.UnityRandomSource()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1329
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nInstantiate a new UnityRandomSource but does not initialize it\n"
  example: []
  syntax:
    content: public UnityRandomSource()
    content.vb: Public Sub New
  overload: RandomToolbox.UnityRandomSource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.#ctor(System.Int32)
  commentId: M:RandomToolbox.UnityRandomSource.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: UnityRandomSource(Int32)
  nameWithType: UnityRandomSource.UnityRandomSource(Int32)
  fullName: RandomToolbox.UnityRandomSource.UnityRandomSource(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1335
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nInstantiate a new UnityRandomSource and Initialize with given seed.\n"
  example: []
  syntax:
    content: public UnityRandomSource(int seed)
    parameters:
    - id: seed
      type: System.Int32
      description: Seed to initialize the random generator
    content.vb: Public Sub New(seed As Integer)
  overload: RandomToolbox.UnityRandomSource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.#ctor(RandomToolbox.SeedGenerators.Generator)
  commentId: M:RandomToolbox.UnityRandomSource.#ctor(RandomToolbox.SeedGenerators.Generator)
  id: '#ctor(RandomToolbox.SeedGenerators.Generator)'
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: UnityRandomSource(SeedGenerators.Generator)
  nameWithType: UnityRandomSource.UnityRandomSource(SeedGenerators.Generator)
  fullName: RandomToolbox.UnityRandomSource.UnityRandomSource(RandomToolbox.SeedGenerators.Generator)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1346
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nInstantiate a new UnityRandomSource with a new generated seed\nbased on given seed generator\n"
  example: []
  syntax:
    content: public UnityRandomSource(SeedGenerators.Generator seedGenerator)
    parameters:
    - id: seedGenerator
      type: RandomToolbox.SeedGenerators.Generator
    content.vb: Public Sub New(seedGenerator As SeedGenerators.Generator)
  overload: RandomToolbox.UnityRandomSource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.Start
  commentId: M:RandomToolbox.UnityRandomSource.Start
  id: Start
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: UnityRandomSource.Start()
  fullName: RandomToolbox.UnityRandomSource.Start()
  type: Method
  source:
    id: Start
    path: ''
    startLine: 1356
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nInitialize the Seed system with the current seed\n"
  example: []
  syntax:
    content: public override void Start()
    content.vb: Public Overrides Sub Start
  overridden: RandomToolbox.RandomSourceBase.Start
  overload: RandomToolbox.UnityRandomSource.Start*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: RandomToolbox.UnityRandomSource.value
  commentId: P:RandomToolbox.UnityRandomSource.value
  id: value
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: value
  nameWithType: UnityRandomSource.value
  fullName: RandomToolbox.UnityRandomSource.value
  type: Property
  source:
    id: value
    path: ''
    startLine: 1384
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturns a random number between 0.0 [inclusive] and 1.0 [inclusive] (Read Only).\n"
  example: []
  syntax:
    content: public float value { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property value As Single
  overload: RandomToolbox.UnityRandomSource.value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.UnityRandomSource.rotation
  commentId: P:RandomToolbox.UnityRandomSource.rotation
  id: rotation
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: UnityRandomSource.rotation
  fullName: RandomToolbox.UnityRandomSource.rotation
  type: Property
  source:
    id: rotation
    path: ''
    startLine: 1389
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturns a random rotation (Read Only).\n"
  example: []
  syntax:
    content: public Quaternion rotation { get; }
    parameters: []
    return:
      type: Global.Quaternion
    content.vb: Public ReadOnly Property rotation As Quaternion
  overload: RandomToolbox.UnityRandomSource.rotation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.UnityRandomSource.rotationUniform
  commentId: P:RandomToolbox.UnityRandomSource.rotationUniform
  id: rotationUniform
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: rotationUniform
  nameWithType: UnityRandomSource.rotationUniform
  fullName: RandomToolbox.UnityRandomSource.rotationUniform
  type: Property
  source:
    id: rotationUniform
    path: ''
    startLine: 1394
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturns a random rotation with uniform distribution (Read Only).\n"
  example: []
  syntax:
    content: public Quaternion rotationUniform { get; }
    parameters: []
    return:
      type: Global.Quaternion
    content.vb: Public ReadOnly Property rotationUniform As Quaternion
  overload: RandomToolbox.UnityRandomSource.rotationUniform*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.UnityRandomSource.insideUnitCircle
  commentId: P:RandomToolbox.UnityRandomSource.insideUnitCircle
  id: insideUnitCircle
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: insideUnitCircle
  nameWithType: UnityRandomSource.insideUnitCircle
  fullName: RandomToolbox.UnityRandomSource.insideUnitCircle
  type: Property
  source:
    id: insideUnitCircle
    path: ''
    startLine: 1399
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturns a random point inside a circle with radius 1 (Read Only).\n"
  example: []
  syntax:
    content: public Vector2 insideUnitCircle { get; }
    parameters: []
    return:
      type: Global.Vector2
    content.vb: Public ReadOnly Property insideUnitCircle As Vector2
  overload: RandomToolbox.UnityRandomSource.insideUnitCircle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.UnityRandomSource.insideUnitSphere
  commentId: P:RandomToolbox.UnityRandomSource.insideUnitSphere
  id: insideUnitSphere
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: insideUnitSphere
  nameWithType: UnityRandomSource.insideUnitSphere
  fullName: RandomToolbox.UnityRandomSource.insideUnitSphere
  type: Property
  source:
    id: insideUnitSphere
    path: ''
    startLine: 1404
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturns a random point inside a sphere with radius 1 (Read Only).\n"
  example: []
  syntax:
    content: public Vector3 insideUnitSphere { get; }
    parameters: []
    return:
      type: Global.Vector3
    content.vb: Public ReadOnly Property insideUnitSphere As Vector3
  overload: RandomToolbox.UnityRandomSource.insideUnitSphere*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.UnityRandomSource.onUnitSphere
  commentId: P:RandomToolbox.UnityRandomSource.onUnitSphere
  id: onUnitSphere
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: onUnitSphere
  nameWithType: UnityRandomSource.onUnitSphere
  fullName: RandomToolbox.UnityRandomSource.onUnitSphere
  type: Property
  source:
    id: onUnitSphere
    path: ''
    startLine: 1409
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturns a random point on the surface of a sphere with radius 1 (Read Only).\n"
  example: []
  syntax:
    content: public Vector3 onUnitSphere { get; }
    parameters: []
    return:
      type: Global.Vector3
    content.vb: Public ReadOnly Property onUnitSphere As Vector3
  overload: RandomToolbox.UnityRandomSource.onUnitSphere*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.UnityRandomSource.ColorHSV
  commentId: M:RandomToolbox.UnityRandomSource.ColorHSV
  id: ColorHSV
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: ColorHSV()
  nameWithType: UnityRandomSource.ColorHSV()
  fullName: RandomToolbox.UnityRandomSource.ColorHSV()
  type: Method
  source:
    id: ColorHSV
    path: ''
    startLine: 1415
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nGenerates a random color from HSV and alpha ranges.\n"
  example: []
  syntax:
    content: public Color ColorHSV()
    return:
      type: Global.Color
      description: A random color with HSV and alpha values in the input ranges.
    content.vb: Public Function ColorHSV As Color
  overload: RandomToolbox.UnityRandomSource.ColorHSV*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single)
  commentId: M:RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single)
  id: ColorHSV(System.Single,System.Single)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: ColorHSV(Single, Single)
  nameWithType: UnityRandomSource.ColorHSV(Single, Single)
  fullName: RandomToolbox.UnityRandomSource.ColorHSV(System.Single, System.Single)
  type: Method
  source:
    id: ColorHSV
    path: ''
    startLine: 1429
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nGenerates a random color from HSV and alpha ranges.\n"
  example: []
  syntax:
    content: public Color ColorHSV(float hueMin, float hueMax)
    parameters:
    - id: hueMin
      type: System.Single
      description: Minimum hue [0..1].
    - id: hueMax
      type: System.Single
      description: Maximum hue [0..1].
    return:
      type: Global.Color
      description: A random color with HSV and alpha values in the input ranges.
    content.vb: Public Function ColorHSV(hueMin As Single, hueMax As Single) As Color
  overload: RandomToolbox.UnityRandomSource.ColorHSV*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single)
  commentId: M:RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single)
  id: ColorHSV(System.Single,System.Single,System.Single,System.Single)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: ColorHSV(Single, Single, Single, Single)
  nameWithType: UnityRandomSource.ColorHSV(Single, Single, Single, Single)
  fullName: RandomToolbox.UnityRandomSource.ColorHSV(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: ColorHSV
    path: ''
    startLine: 1445
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nGenerates a random color from HSV and alpha ranges.\n"
  example: []
  syntax:
    content: public Color ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax)
    parameters:
    - id: hueMin
      type: System.Single
      description: Minimum hue [0..1].
    - id: hueMax
      type: System.Single
      description: Maximum hue [0..1].
    - id: saturationMin
      type: System.Single
      description: Minimum saturation [0..1].
    - id: saturationMax
      type: System.Single
      description: Maximum saturation[0..1].
    return:
      type: Global.Color
      description: A random color with HSV and alpha values in the input ranges.
    content.vb: Public Function ColorHSV(hueMin As Single, hueMax As Single, saturationMin As Single, saturationMax As Single) As Color
  overload: RandomToolbox.UnityRandomSource.ColorHSV*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: ColorHSV(Single, Single, Single, Single, Single, Single)
  nameWithType: UnityRandomSource.ColorHSV(Single, Single, Single, Single, Single, Single)
  fullName: RandomToolbox.UnityRandomSource.ColorHSV(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: ColorHSV
    path: ''
    startLine: 1463
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nGenerates a random color from HSV and alpha ranges.\n"
  example: []
  syntax:
    content: public Color ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax, float valueMin, float valueMax)
    parameters:
    - id: hueMin
      type: System.Single
      description: Minimum hue [0..1].
    - id: hueMax
      type: System.Single
      description: Maximum hue [0..1].
    - id: saturationMin
      type: System.Single
      description: Minimum saturation [0..1].
    - id: saturationMax
      type: System.Single
      description: Maximum saturation[0..1].
    - id: valueMin
      type: System.Single
      description: Minimum value [0..1].
    - id: valueMax
      type: System.Single
      description: Maximum value [0..1].
    return:
      type: Global.Color
      description: A random color with HSV and alpha values in the input ranges.
    content.vb: Public Function ColorHSV(hueMin As Single, hueMax As Single, saturationMin As Single, saturationMax As Single, valueMin As Single, valueMax As Single) As Color
  overload: RandomToolbox.UnityRandomSource.ColorHSV*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:RandomToolbox.UnityRandomSource.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: ColorHSV(Single, Single, Single, Single, Single, Single, Single, Single)
  nameWithType: UnityRandomSource.ColorHSV(Single, Single, Single, Single, Single, Single, Single, Single)
  fullName: RandomToolbox.UnityRandomSource.ColorHSV(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: ColorHSV
    path: ''
    startLine: 1483
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nGenerates a random color from HSV and alpha ranges.\n"
  example: []
  syntax:
    content: public Color ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax, float valueMin, float valueMax, float alphaMin, float alphaMax)
    parameters:
    - id: hueMin
      type: System.Single
      description: Minimum hue [0..1].
    - id: hueMax
      type: System.Single
      description: Maximum hue [0..1].
    - id: saturationMin
      type: System.Single
      description: Minimum saturation [0..1].
    - id: saturationMax
      type: System.Single
      description: Maximum saturation[0..1].
    - id: valueMin
      type: System.Single
      description: Minimum value [0..1].
    - id: valueMax
      type: System.Single
      description: Maximum value [0..1].
    - id: alphaMin
      type: System.Single
      description: Minimum alpha [0..1].
    - id: alphaMax
      type: System.Single
      description: Maximum alpha [0..1].
    return:
      type: Global.Color
      description: A random color with HSV and alpha values in the input ranges.
    content.vb: Public Function ColorHSV(hueMin As Single, hueMax As Single, saturationMin As Single, saturationMax As Single, valueMin As Single, valueMax As Single, alphaMin As Single, alphaMax As Single) As Color
  overload: RandomToolbox.UnityRandomSource.ColorHSV*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.Range(System.Int32,System.Int32)
  commentId: M:RandomToolbox.UnityRandomSource.Range(System.Int32,System.Int32)
  id: Range(System.Int32,System.Int32)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: Range(Int32, Int32)
  nameWithType: UnityRandomSource.Range(Int32, Int32)
  fullName: RandomToolbox.UnityRandomSource.Range(System.Int32, System.Int32)
  type: Method
  source:
    id: Range
    path: ''
    startLine: 1497
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturn a random integer number between min [inclusive] and max [exclusive] (ReadOnly).\n"
  example: []
  syntax:
    content: public int Range(int min, int max)
    parameters:
    - id: min
      type: System.Int32
      description: min int value [inclusive]
    - id: max
      type: System.Int32
      description: max int value [exclusive]
    return:
      type: System.Int32
      description: random integer number
    content.vb: Public Function Range(min As Integer, max As Integer) As Integer
  overload: RandomToolbox.UnityRandomSource.Range*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.Range(System.Single,System.Single)
  commentId: M:RandomToolbox.UnityRandomSource.Range(System.Single,System.Single)
  id: Range(System.Single,System.Single)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: Range(Single, Single)
  nameWithType: UnityRandomSource.Range(Single, Single)
  fullName: RandomToolbox.UnityRandomSource.Range(System.Single, System.Single)
  type: Method
  source:
    id: Range
    path: ''
    startLine: 1511
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturn a random float number between min [inclusive] and max [inclusive] (ReadOnly).\n"
  example: []
  syntax:
    content: public float Range(float min, float max)
    parameters:
    - id: min
      type: System.Single
      description: min float value [inclusive]
    - id: max
      type: System.Single
      description: max float value [inclusive]
    return:
      type: System.Single
      description: random float number
    content.vb: Public Function Range(min As Single, max As Single) As Single
  overload: RandomToolbox.UnityRandomSource.Range*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.Save
  commentId: M:RandomToolbox.UnityRandomSource.Save
  id: Save
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: UnityRandomSource.Save()
  fullName: RandomToolbox.UnityRandomSource.Save()
  type: Method
  source:
    id: Save
    path: ''
    startLine: 1523
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nGet the current state to save and restore it later\n"
  example: []
  syntax:
    content: public Random.State Save()
    return:
      type: System.Random.State
      description: ''
    content.vb: Public Function Save As Random.State
  overload: RandomToolbox.UnityRandomSource.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.UnityRandomSource.Restore(System.Random.State)
  commentId: M:RandomToolbox.UnityRandomSource.Restore(System.Random.State)
  id: Restore(System.Random.State)
  parent: RandomToolbox.UnityRandomSource
  langs:
  - csharp
  - vb
  name: Restore(Random.State)
  nameWithType: UnityRandomSource.Restore(Random.State)
  fullName: RandomToolbox.UnityRandomSource.Restore(System.Random.State)
  type: Method
  source:
    id: Restore
    path: ''
    startLine: 1532
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nRestore the random source with the given state\n"
  example: []
  syntax:
    content: public void Restore(Random.State state)
    parameters:
    - id: state
      type: System.Random.State
      description: ''
    content.vb: Public Sub Restore(state As Random.State)
  overload: RandomToolbox.UnityRandomSource.Restore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: RandomToolbox
  commentId: N:RandomToolbox
  name: RandomToolbox
  nameWithType: RandomToolbox
  fullName: RandomToolbox
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RandomToolbox.RandomSourceBase
  commentId: T:RandomToolbox.RandomSourceBase
  parent: RandomToolbox
  name: RandomSourceBase
  nameWithType: RandomSourceBase
  fullName: RandomToolbox.RandomSourceBase
- uid: RandomToolbox.RandomSourceBase.m_seed
  commentId: F:RandomToolbox.RandomSourceBase.m_seed
  parent: RandomToolbox.RandomSourceBase
  name: m_seed
  nameWithType: RandomSourceBase.m_seed
  fullName: RandomToolbox.RandomSourceBase.m_seed
- uid: RandomToolbox.RandomSourceBase.SeedGenerator
  commentId: F:RandomToolbox.RandomSourceBase.SeedGenerator
  parent: RandomToolbox.RandomSourceBase
  name: SeedGenerator
  nameWithType: RandomSourceBase.SeedGenerator
  fullName: RandomToolbox.RandomSourceBase.SeedGenerator
- uid: RandomToolbox.RandomSourceBase.Seed
  commentId: P:RandomToolbox.RandomSourceBase.Seed
  parent: RandomToolbox.RandomSourceBase
  name: Seed
  nameWithType: RandomSourceBase.Seed
  fullName: RandomToolbox.RandomSourceBase.Seed
- uid: RandomToolbox.RandomSourceBase.Start(System.Int32)
  commentId: M:RandomToolbox.RandomSourceBase.Start(System.Int32)
  parent: RandomToolbox.RandomSourceBase
  isExternal: true
  name: Start(Int32)
  nameWithType: RandomSourceBase.Start(Int32)
  fullName: RandomToolbox.RandomSourceBase.Start(System.Int32)
  spec.csharp:
  - uid: RandomToolbox.RandomSourceBase.Start(System.Int32)
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.RandomSourceBase.Start(System.Int32)
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.RandomSourceBase.Start(System.Boolean)
  commentId: M:RandomToolbox.RandomSourceBase.Start(System.Boolean)
  parent: RandomToolbox.RandomSourceBase
  isExternal: true
  name: Start(Boolean)
  nameWithType: RandomSourceBase.Start(Boolean)
  fullName: RandomToolbox.RandomSourceBase.Start(System.Boolean)
  spec.csharp:
  - uid: RandomToolbox.RandomSourceBase.Start(System.Boolean)
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.RandomSourceBase.Start(System.Boolean)
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.RandomSourceBase.Start(RandomToolbox.SeedGenerators.Generator)
  commentId: M:RandomToolbox.RandomSourceBase.Start(RandomToolbox.SeedGenerators.Generator)
  parent: RandomToolbox.RandomSourceBase
  name: Start(SeedGenerators.Generator)
  nameWithType: RandomSourceBase.Start(SeedGenerators.Generator)
  fullName: RandomToolbox.RandomSourceBase.Start(RandomToolbox.SeedGenerators.Generator)
  spec.csharp:
  - uid: RandomToolbox.RandomSourceBase.Start(RandomToolbox.SeedGenerators.Generator)
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: RandomToolbox.SeedGenerators.Generator
    name: SeedGenerators.Generator
    nameWithType: SeedGenerators.Generator
    fullName: RandomToolbox.SeedGenerators.Generator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.RandomSourceBase.Start(RandomToolbox.SeedGenerators.Generator)
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: RandomToolbox.SeedGenerators.Generator
    name: SeedGenerators.Generator
    nameWithType: SeedGenerators.Generator
    fullName: RandomToolbox.SeedGenerators.Generator
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.RandomSourceBase.Reseed
  commentId: M:RandomToolbox.RandomSourceBase.Reseed
  parent: RandomToolbox.RandomSourceBase
  name: Reseed()
  nameWithType: RandomSourceBase.Reseed()
  fullName: RandomToolbox.RandomSourceBase.Reseed()
  spec.csharp:
  - uid: RandomToolbox.RandomSourceBase.Reseed
    name: Reseed
    nameWithType: RandomSourceBase.Reseed
    fullName: RandomToolbox.RandomSourceBase.Reseed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.RandomSourceBase.Reseed
    name: Reseed
    nameWithType: RandomSourceBase.Reseed
    fullName: RandomToolbox.RandomSourceBase.Reseed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RandomToolbox.UnityRandomSource.#ctor*
  commentId: Overload:RandomToolbox.UnityRandomSource.#ctor
  name: UnityRandomSource
  nameWithType: UnityRandomSource.UnityRandomSource
  fullName: RandomToolbox.UnityRandomSource.UnityRandomSource
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RandomToolbox.SeedGenerators.Generator
  commentId: T:RandomToolbox.SeedGenerators.Generator
  parent: RandomToolbox
  name: SeedGenerators.Generator
  nameWithType: SeedGenerators.Generator
  fullName: RandomToolbox.SeedGenerators.Generator
- uid: RandomToolbox.RandomSourceBase.Start
  commentId: M:RandomToolbox.RandomSourceBase.Start
  parent: RandomToolbox.RandomSourceBase
  name: Start()
  nameWithType: RandomSourceBase.Start()
  fullName: RandomToolbox.RandomSourceBase.Start()
  spec.csharp:
  - uid: RandomToolbox.RandomSourceBase.Start
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.RandomSourceBase.Start
    name: Start
    nameWithType: RandomSourceBase.Start
    fullName: RandomToolbox.RandomSourceBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.UnityRandomSource.Start*
  commentId: Overload:RandomToolbox.UnityRandomSource.Start
  name: Start
  nameWithType: UnityRandomSource.Start
  fullName: RandomToolbox.UnityRandomSource.Start
- uid: RandomToolbox.UnityRandomSource.value*
  commentId: Overload:RandomToolbox.UnityRandomSource.value
  name: value
  nameWithType: UnityRandomSource.value
  fullName: RandomToolbox.UnityRandomSource.value
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: RandomToolbox.UnityRandomSource.rotation*
  commentId: Overload:RandomToolbox.UnityRandomSource.rotation
  name: rotation
  nameWithType: UnityRandomSource.rotation
  fullName: RandomToolbox.UnityRandomSource.rotation
- uid: Global.Quaternion
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: Quaternion
- uid: RandomToolbox.UnityRandomSource.rotationUniform*
  commentId: Overload:RandomToolbox.UnityRandomSource.rotationUniform
  name: rotationUniform
  nameWithType: UnityRandomSource.rotationUniform
  fullName: RandomToolbox.UnityRandomSource.rotationUniform
- uid: RandomToolbox.UnityRandomSource.insideUnitCircle*
  commentId: Overload:RandomToolbox.UnityRandomSource.insideUnitCircle
  name: insideUnitCircle
  nameWithType: UnityRandomSource.insideUnitCircle
  fullName: RandomToolbox.UnityRandomSource.insideUnitCircle
- uid: Global.Vector2
  commentId: '!:Global.Vector2'
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: RandomToolbox.UnityRandomSource.insideUnitSphere*
  commentId: Overload:RandomToolbox.UnityRandomSource.insideUnitSphere
  name: insideUnitSphere
  nameWithType: UnityRandomSource.insideUnitSphere
  fullName: RandomToolbox.UnityRandomSource.insideUnitSphere
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: RandomToolbox.UnityRandomSource.onUnitSphere*
  commentId: Overload:RandomToolbox.UnityRandomSource.onUnitSphere
  name: onUnitSphere
  nameWithType: UnityRandomSource.onUnitSphere
  fullName: RandomToolbox.UnityRandomSource.onUnitSphere
- uid: RandomToolbox.UnityRandomSource.ColorHSV*
  commentId: Overload:RandomToolbox.UnityRandomSource.ColorHSV
  name: ColorHSV
  nameWithType: UnityRandomSource.ColorHSV
  fullName: RandomToolbox.UnityRandomSource.ColorHSV
- uid: Global.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: RandomToolbox.UnityRandomSource.Range*
  commentId: Overload:RandomToolbox.UnityRandomSource.Range
  name: Range
  nameWithType: UnityRandomSource.Range
  fullName: RandomToolbox.UnityRandomSource.Range
- uid: RandomToolbox.UnityRandomSource.Save*
  commentId: Overload:RandomToolbox.UnityRandomSource.Save
  name: Save
  nameWithType: UnityRandomSource.Save
  fullName: RandomToolbox.UnityRandomSource.Save
- uid: System.Random.State
  isExternal: true
  name: Random.State
  nameWithType: Random.State
  fullName: System.Random.State
- uid: RandomToolbox.UnityRandomSource.Restore*
  commentId: Overload:RandomToolbox.UnityRandomSource.Restore
  name: Restore
  nameWithType: UnityRandomSource.Restore
  fullName: RandomToolbox.UnityRandomSource.Restore
