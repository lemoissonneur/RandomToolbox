### YamlMime:ManagedReference
items:
- uid: RandomToolbox.SystemRandomSource.State
  commentId: T:RandomToolbox.SystemRandomSource.State
  id: SystemRandomSource.State
  parent: RandomToolbox
  children:
  - RandomToolbox.SystemRandomSource.State.bytes
  langs:
  - csharp
  - vb
  name: SystemRandomSource.State
  nameWithType: SystemRandomSource.State
  fullName: RandomToolbox.SystemRandomSource.State
  type: Struct
  source:
    id: State
    path: ''
    startLine: 1275
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nUsed to save System.Random state\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct State
    content.vb: >-
      <Serializable>

      Public Structure State
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: RandomToolbox.SystemRandomSource.State.bytes
  commentId: F:RandomToolbox.SystemRandomSource.State.bytes
  id: bytes
  parent: RandomToolbox.SystemRandomSource.State
  langs:
  - csharp
  - vb
  name: bytes
  nameWithType: SystemRandomSource.State.bytes
  fullName: RandomToolbox.SystemRandomSource.State.bytes
  type: Field
  source:
    id: bytes
    path: ''
    startLine: 1278
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  syntax:
    content: public byte[] bytes
    return:
      type: System.Byte[]
    content.vb: Public bytes As Byte()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: RandomToolbox
  commentId: N:RandomToolbox
  name: RandomToolbox
  nameWithType: RandomToolbox
  fullName: RandomToolbox
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
