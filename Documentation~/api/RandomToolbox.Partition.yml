### YamlMime:ManagedReference
items:
- uid: RandomToolbox.Partition
  commentId: T:RandomToolbox.Partition
  id: Partition
  parent: RandomToolbox
  children:
  - RandomToolbox.Partition._elements
  - RandomToolbox.Partition.AddElement(RandomToolbox.Partition.Element,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  - RandomToolbox.Partition.AddElement(System.Single,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  - RandomToolbox.Partition.Elements
  - RandomToolbox.Partition.GetElement(System.Single)
  - RandomToolbox.Partition.RemoveElementAt(System.Int32,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: Partition
  fullName: RandomToolbox.Partition
  type: Class
  source:
    id: Partition
    path: ''
    startLine: 776
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Partition : PartitionBase
    content.vb: >-
      <Serializable>

      Public Class Partition
          Inherits PartitionBase
  inheritance:
  - System.Object
  - RandomToolbox.PartitionBase
  inheritedMembers:
  - RandomToolbox.PartitionBase.IsCorrect
  - RandomToolbox.PartitionBase.GetIndex(System.Single)
  - RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  - RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  - RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  - RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  - RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RandomToolbox.Partition._elements
  commentId: P:RandomToolbox.Partition._elements
  id: _elements
  parent: RandomToolbox.Partition
  langs:
  - csharp
  - vb
  name: _elements
  nameWithType: Partition._elements
  fullName: RandomToolbox.Partition._elements
  type: Property
  source:
    id: _elements
    path: ''
    startLine: 781
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  syntax:
    content: protected override IReadOnlyList<PartitionBase.ElementBase> _elements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{RandomToolbox.PartitionBase.ElementBase}
    content.vb: Protected Overrides ReadOnly Property _elements As IReadOnlyList(Of PartitionBase.ElementBase)
  overridden: RandomToolbox.PartitionBase._elements
  overload: RandomToolbox.Partition._elements*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: RandomToolbox.Partition.Elements
  commentId: F:RandomToolbox.Partition.Elements
  id: Elements
  parent: RandomToolbox.Partition
  langs:
  - csharp
  - vb
  name: Elements
  nameWithType: Partition.Elements
  fullName: RandomToolbox.Partition.Elements
  type: Field
  source:
    id: Elements
    path: ''
    startLine: 786
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nList of Elements in the partition\n"
  example: []
  syntax:
    content: public List<Partition.Element> Elements
    return:
      type: System.Collections.Generic.List{RandomToolbox.Partition.Element}
    content.vb: Public Elements As List(Of Partition.Element)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.Partition.GetElement(System.Single)
  commentId: M:RandomToolbox.Partition.GetElement(System.Single)
  id: GetElement(System.Single)
  parent: RandomToolbox.Partition
  langs:
  - csharp
  - vb
  name: GetElement(Single)
  nameWithType: Partition.GetElement(Single)
  fullName: RandomToolbox.Partition.GetElement(System.Single)
  type: Method
  source:
    id: GetElement
    path: ''
    startLine: 793
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nShorthand for Elements[GetIndex(value)]\n"
  example: []
  syntax:
    content: public Partition.Element GetElement(float value)
    parameters:
    - id: value
      type: System.Single
      description: value in the 0-1 range
    return:
      type: RandomToolbox.Partition.Element
      description: null if no element found
    content.vb: Public Function GetElement(value As Single) As Partition.Element
  overload: RandomToolbox.Partition.GetElement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.Partition.AddElement(RandomToolbox.Partition.Element,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  commentId: M:RandomToolbox.Partition.AddElement(RandomToolbox.Partition.Element,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  id: AddElement(RandomToolbox.Partition.Element,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  parent: RandomToolbox.Partition
  langs:
  - csharp
  - vb
  name: AddElement(Partition.Element, PartitionBase.CorrectionRule, Single, Single)
  nameWithType: Partition.AddElement(Partition.Element, PartitionBase.CorrectionRule, Single, Single)
  fullName: RandomToolbox.Partition.AddElement(RandomToolbox.Partition.Element, RandomToolbox.PartitionBase.CorrectionRule, System.Single, System.Single)
  type: Method
  source:
    id: AddElement
    path: ''
    startLine: 807
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddElement(Partition.Element element, PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll, float minValue = 0F, float maxValue = 1F)
    parameters:
    - id: element
      type: RandomToolbox.Partition.Element
      description: ''
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: ''
    - id: minValue
      type: System.Single
      description: ''
    - id: maxValue
      type: System.Single
      description: ''
    content.vb: Public Sub AddElement(element As Partition.Element, rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll, minValue As Single = 0F, maxValue As Single = 1F)
  overload: RandomToolbox.Partition.AddElement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.Partition.AddElement(System.Single,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  commentId: M:RandomToolbox.Partition.AddElement(System.Single,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  id: AddElement(System.Single,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  parent: RandomToolbox.Partition
  langs:
  - csharp
  - vb
  name: AddElement(Single, PartitionBase.CorrectionRule, Single, Single)
  nameWithType: Partition.AddElement(Single, PartitionBase.CorrectionRule, Single, Single)
  fullName: RandomToolbox.Partition.AddElement(System.Single, RandomToolbox.PartitionBase.CorrectionRule, System.Single, System.Single)
  type: Method
  source:
    id: AddElement
    path: ''
    startLine: 821
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\n\n"
  example: []
  syntax:
    content: public void AddElement(float value, PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll, float minValue = 0F, float maxValue = 1F)
    parameters:
    - id: value
      type: System.Single
      description: ''
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: ''
    - id: minValue
      type: System.Single
      description: ''
    - id: maxValue
      type: System.Single
      description: ''
    content.vb: Public Sub AddElement(value As Single, rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll, minValue As Single = 0F, maxValue As Single = 1F)
  overload: RandomToolbox.Partition.AddElement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.Partition.RemoveElementAt(System.Int32,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  commentId: M:RandomToolbox.Partition.RemoveElementAt(System.Int32,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  id: RemoveElementAt(System.Int32,RandomToolbox.PartitionBase.CorrectionRule,System.Single,System.Single)
  parent: RandomToolbox.Partition
  langs:
  - csharp
  - vb
  name: RemoveElementAt(Int32, PartitionBase.CorrectionRule, Single, Single)
  nameWithType: Partition.RemoveElementAt(Int32, PartitionBase.CorrectionRule, Single, Single)
  fullName: RandomToolbox.Partition.RemoveElementAt(System.Int32, RandomToolbox.PartitionBase.CorrectionRule, System.Single, System.Single)
  type: Method
  source:
    id: RemoveElementAt
    path: ''
    startLine: 835
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\n\n"
  example: []
  syntax:
    content: public void RemoveElementAt(int index, PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll, float minValue = 0F, float maxValue = 1F)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: ''
    - id: minValue
      type: System.Single
      description: ''
    - id: maxValue
      type: System.Single
      description: ''
    content.vb: Public Sub RemoveElementAt(index As Integer, rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll, minValue As Single = 0F, maxValue As Single = 1F)
  overload: RandomToolbox.Partition.RemoveElementAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: RandomToolbox
  commentId: N:RandomToolbox
  name: RandomToolbox
  nameWithType: RandomToolbox
  fullName: RandomToolbox
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RandomToolbox.PartitionBase
  commentId: T:RandomToolbox.PartitionBase
  parent: RandomToolbox
  name: PartitionBase
  nameWithType: PartitionBase
  fullName: RandomToolbox.PartitionBase
- uid: RandomToolbox.PartitionBase.IsCorrect
  commentId: P:RandomToolbox.PartitionBase.IsCorrect
  parent: RandomToolbox.PartitionBase
  name: IsCorrect
  nameWithType: PartitionBase.IsCorrect
  fullName: RandomToolbox.PartitionBase.IsCorrect
- uid: RandomToolbox.PartitionBase.GetIndex(System.Single)
  commentId: M:RandomToolbox.PartitionBase.GetIndex(System.Single)
  parent: RandomToolbox.PartitionBase
  isExternal: true
  name: GetIndex(Single)
  nameWithType: PartitionBase.GetIndex(Single)
  fullName: RandomToolbox.PartitionBase.GetIndex(System.Single)
  spec.csharp:
  - uid: RandomToolbox.PartitionBase.GetIndex(System.Single)
    name: GetIndex
    nameWithType: PartitionBase.GetIndex
    fullName: RandomToolbox.PartitionBase.GetIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.PartitionBase.GetIndex(System.Single)
    name: GetIndex
    nameWithType: PartitionBase.GetIndex
    fullName: RandomToolbox.PartitionBase.GetIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  commentId: M:RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  parent: RandomToolbox.PartitionBase
  isExternal: true
  name: SetValues(Single[], PartitionBase.CorrectionRule)
  nameWithType: PartitionBase.SetValues(Single[], PartitionBase.CorrectionRule)
  fullName: RandomToolbox.PartitionBase.SetValues(System.Single[], RandomToolbox.PartitionBase.CorrectionRule)
  nameWithType.vb: PartitionBase.SetValues(Single(), PartitionBase.CorrectionRule)
  fullName.vb: RandomToolbox.PartitionBase.SetValues(System.Single(), RandomToolbox.PartitionBase.CorrectionRule)
  name.vb: SetValues(Single(), PartitionBase.CorrectionRule)
  spec.csharp:
  - uid: RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
    name: SetValues
    nameWithType: PartitionBase.SetValues
    fullName: RandomToolbox.PartitionBase.SetValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
    name: SetValues
    nameWithType: PartitionBase.SetValues
    fullName: RandomToolbox.PartitionBase.SetValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  commentId: M:RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  parent: RandomToolbox.PartitionBase
  isExternal: true
  name: SetValue(Int32, Single, PartitionBase.CorrectionRule)
  nameWithType: PartitionBase.SetValue(Int32, Single, PartitionBase.CorrectionRule)
  fullName: RandomToolbox.PartitionBase.SetValue(System.Int32, System.Single, RandomToolbox.PartitionBase.CorrectionRule)
  spec.csharp:
  - uid: RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
    name: SetValue
    nameWithType: PartitionBase.SetValue
    fullName: RandomToolbox.PartitionBase.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
    name: SetValue
    nameWithType: PartitionBase.SetValue
    fullName: RandomToolbox.PartitionBase.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  commentId: M:RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  parent: RandomToolbox.PartitionBase
  isExternal: true
  name: CorrectPartition(PartitionBase.CorrectionRule, Int32, Single, Single)
  nameWithType: PartitionBase.CorrectPartition(PartitionBase.CorrectionRule, Int32, Single, Single)
  fullName: RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule, System.Int32, System.Single, System.Single)
  spec.csharp:
  - uid: RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
    name: CorrectPartition
    nameWithType: PartitionBase.CorrectPartition
    fullName: RandomToolbox.PartitionBase.CorrectPartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
    name: CorrectPartition
    nameWithType: PartitionBase.CorrectPartition
    fullName: RandomToolbox.PartitionBase.CorrectPartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  commentId: M:RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  parent: RandomToolbox.PartitionBase
  isExternal: true
  name: DefaultPartitionCorrection(Single[])
  nameWithType: PartitionBase.DefaultPartitionCorrection(Single[])
  fullName: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  nameWithType.vb: PartitionBase.DefaultPartitionCorrection(Single())
  fullName.vb: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single())
  name.vb: DefaultPartitionCorrection(Single())
  spec.csharp:
  - uid: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
    name: DefaultPartitionCorrection
    nameWithType: PartitionBase.DefaultPartitionCorrection
    fullName: RandomToolbox.PartitionBase.DefaultPartitionCorrection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
    name: DefaultPartitionCorrection
    nameWithType: PartitionBase.DefaultPartitionCorrection
    fullName: RandomToolbox.PartitionBase.DefaultPartitionCorrection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  commentId: M:RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  parent: RandomToolbox.PartitionBase
  isExternal: true
  name: CorrectPartition(Single[], PartitionBase.CorrectionRule, Int32, Single, Single)
  nameWithType: PartitionBase.CorrectPartition(Single[], PartitionBase.CorrectionRule, Int32, Single, Single)
  fullName: RandomToolbox.PartitionBase.CorrectPartition(System.Single[], RandomToolbox.PartitionBase.CorrectionRule, System.Int32, System.Single, System.Single)
  nameWithType.vb: PartitionBase.CorrectPartition(Single(), PartitionBase.CorrectionRule, Int32, Single, Single)
  fullName.vb: RandomToolbox.PartitionBase.CorrectPartition(System.Single(), RandomToolbox.PartitionBase.CorrectionRule, System.Int32, System.Single, System.Single)
  name.vb: CorrectPartition(Single(), PartitionBase.CorrectionRule, Int32, Single, Single)
  spec.csharp:
  - uid: RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
    name: CorrectPartition
    nameWithType: PartitionBase.CorrectPartition
    fullName: RandomToolbox.PartitionBase.CorrectPartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
    name: CorrectPartition
    nameWithType: PartitionBase.CorrectPartition
    fullName: RandomToolbox.PartitionBase.CorrectPartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RandomToolbox.PartitionBase.CorrectionRule
    name: PartitionBase.CorrectionRule
    nameWithType: PartitionBase.CorrectionRule
    fullName: RandomToolbox.PartitionBase.CorrectionRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RandomToolbox.PartitionBase._elements
  commentId: P:RandomToolbox.PartitionBase._elements
  parent: RandomToolbox.PartitionBase
  name: _elements
  nameWithType: PartitionBase._elements
  fullName: RandomToolbox.PartitionBase._elements
- uid: RandomToolbox.Partition._elements*
  commentId: Overload:RandomToolbox.Partition._elements
  name: _elements
  nameWithType: Partition._elements
  fullName: RandomToolbox.Partition._elements
- uid: System.Collections.Generic.IReadOnlyList{RandomToolbox.PartitionBase.ElementBase}
  commentId: T:System.Collections.Generic.IReadOnlyList{RandomToolbox.PartitionBase.ElementBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PartitionBase.ElementBase>
  nameWithType: IReadOnlyList<PartitionBase.ElementBase>
  fullName: System.Collections.Generic.IReadOnlyList<RandomToolbox.PartitionBase.ElementBase>
  nameWithType.vb: IReadOnlyList(Of PartitionBase.ElementBase)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of RandomToolbox.PartitionBase.ElementBase)
  name.vb: IReadOnlyList(Of PartitionBase.ElementBase)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RandomToolbox.PartitionBase.ElementBase
    name: PartitionBase.ElementBase
    nameWithType: PartitionBase.ElementBase
    fullName: RandomToolbox.PartitionBase.ElementBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RandomToolbox.PartitionBase.ElementBase
    name: PartitionBase.ElementBase
    nameWithType: PartitionBase.ElementBase
    fullName: RandomToolbox.PartitionBase.ElementBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{RandomToolbox.Partition.Element}
  commentId: T:System.Collections.Generic.List{RandomToolbox.Partition.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Partition.Element>
  nameWithType: List<Partition.Element>
  fullName: System.Collections.Generic.List<RandomToolbox.Partition.Element>
  nameWithType.vb: List(Of Partition.Element)
  fullName.vb: System.Collections.Generic.List(Of RandomToolbox.Partition.Element)
  name.vb: List(Of Partition.Element)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RandomToolbox.Partition.Element
    name: Partition.Element
    nameWithType: Partition.Element
    fullName: RandomToolbox.Partition.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RandomToolbox.Partition.Element
    name: Partition.Element
    nameWithType: Partition.Element
    fullName: RandomToolbox.Partition.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RandomToolbox.Partition.GetElement*
  commentId: Overload:RandomToolbox.Partition.GetElement
  name: GetElement
  nameWithType: Partition.GetElement
  fullName: RandomToolbox.Partition.GetElement
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: RandomToolbox.Partition.Element
  commentId: T:RandomToolbox.Partition.Element
  parent: RandomToolbox
  name: Partition.Element
  nameWithType: Partition.Element
  fullName: RandomToolbox.Partition.Element
- uid: RandomToolbox.Partition.AddElement*
  commentId: Overload:RandomToolbox.Partition.AddElement
  name: AddElement
  nameWithType: Partition.AddElement
  fullName: RandomToolbox.Partition.AddElement
- uid: RandomToolbox.PartitionBase.CorrectionRule
  commentId: T:RandomToolbox.PartitionBase.CorrectionRule
  parent: RandomToolbox
  name: PartitionBase.CorrectionRule
  nameWithType: PartitionBase.CorrectionRule
  fullName: RandomToolbox.PartitionBase.CorrectionRule
- uid: RandomToolbox.Partition.RemoveElementAt*
  commentId: Overload:RandomToolbox.Partition.RemoveElementAt
  name: RemoveElementAt
  nameWithType: Partition.RemoveElementAt
  fullName: RandomToolbox.Partition.RemoveElementAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
