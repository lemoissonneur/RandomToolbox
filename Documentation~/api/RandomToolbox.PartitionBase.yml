### YamlMime:ManagedReference
items:
- uid: RandomToolbox.PartitionBase
  commentId: T:RandomToolbox.PartitionBase
  id: PartitionBase
  parent: RandomToolbox
  children:
  - RandomToolbox.PartitionBase._elements
  - RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  - RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  - RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  - RandomToolbox.PartitionBase.GetIndex(System.Single)
  - RandomToolbox.PartitionBase.IsCorrect
  - RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  - RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  langs:
  - csharp
  - vb
  name: PartitionBase
  nameWithType: PartitionBase
  fullName: RandomToolbox.PartitionBase
  type: Class
  source:
    id: PartitionBase
    path: ''
    startLine: 556
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nThe base class is used for PropertyDrawer declaration and shared methods between the 2 derived class\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class PartitionBase
    content.vb: >-
      <Serializable>

      Public MustInherit Class PartitionBase
  inheritance:
  - System.Object
  derivedClasses:
  - RandomToolbox.Partition
  - RandomToolbox.Partition`1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: RandomToolbox.PartitionBase._elements
  commentId: P:RandomToolbox.PartitionBase._elements
  id: _elements
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: _elements
  nameWithType: PartitionBase._elements
  fullName: RandomToolbox.PartitionBase._elements
  type: Property
  source:
    id: _elements
    path: ''
    startLine: 579
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\noverriden in derived class to give this class access to partition elements\n"
  example: []
  syntax:
    content: protected abstract IReadOnlyList<PartitionBase.ElementBase> _elements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{RandomToolbox.PartitionBase.ElementBase}
    content.vb: Protected MustOverride ReadOnly Property _elements As IReadOnlyList(Of PartitionBase.ElementBase)
  overload: RandomToolbox.PartitionBase._elements*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: RandomToolbox.PartitionBase.IsCorrect
  commentId: P:RandomToolbox.PartitionBase.IsCorrect
  id: IsCorrect
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: IsCorrect
  nameWithType: PartitionBase.IsCorrect
  fullName: RandomToolbox.PartitionBase.IsCorrect
  type: Property
  source:
    id: IsCorrect
    path: ''
    startLine: 584
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nTrue if the sum of all elements value is equal to 1.0\n"
  example: []
  syntax:
    content: public bool IsCorrect { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCorrect As Boolean
  overload: RandomToolbox.PartitionBase.IsCorrect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RandomToolbox.PartitionBase.GetIndex(System.Single)
  commentId: M:RandomToolbox.PartitionBase.GetIndex(System.Single)
  id: GetIndex(System.Single)
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: GetIndex(Single)
  nameWithType: PartitionBase.GetIndex(Single)
  fullName: RandomToolbox.PartitionBase.GetIndex(System.Single)
  type: Method
  source:
    id: GetIndex
    path: ''
    startLine: 591
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nReturn the index of elements at the given value in the partition range\n"
  example: []
  syntax:
    content: public int GetIndex(float value)
    parameters:
    - id: value
      type: System.Single
      description: value in the 0-1 range
    return:
      type: System.Int32
      description: Return 0 if given value is lower than 0, last index of elements list if value is more than 1, or -1 if list is empty
    content.vb: Public Function GetIndex(value As Single) As Integer
  overload: RandomToolbox.PartitionBase.GetIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  commentId: M:RandomToolbox.PartitionBase.SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  id: SetValues(System.Single[],RandomToolbox.PartitionBase.CorrectionRule)
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: SetValues(Single[], PartitionBase.CorrectionRule)
  nameWithType: PartitionBase.SetValues(Single[], PartitionBase.CorrectionRule)
  fullName: RandomToolbox.PartitionBase.SetValues(System.Single[], RandomToolbox.PartitionBase.CorrectionRule)
  type: Method
  source:
    id: SetValues
    path: ''
    startLine: 616
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nSet the values for all elements in the partitions.\nIf the number of given value is lower than the current number of elements, the remaining elements value will be set to zero.\nIf the number of given value is higher than the current number of elements, the remaining given value will be ignored.\nIf the sum of values is not equal to 1.0, the partition will be corrected using the given correction rule (or the default one)\n"
  example: []
  syntax:
    content: public virtual void SetValues(float[] values, PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll)
    parameters:
    - id: values
      type: System.Single[]
      description: An array of float value that sum up to 1.0
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: The correction rule to use if the sum is not 1.0
    content.vb: Public Overridable Sub SetValues(values As Single(), rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll)
  overload: RandomToolbox.PartitionBase.SetValues*
  nameWithType.vb: PartitionBase.SetValues(Single(), PartitionBase.CorrectionRule)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: RandomToolbox.PartitionBase.SetValues(System.Single(), RandomToolbox.PartitionBase.CorrectionRule)
  name.vb: SetValues(Single(), PartitionBase.CorrectionRule)
- uid: RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  commentId: M:RandomToolbox.PartitionBase.SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  id: SetValue(System.Int32,System.Single,RandomToolbox.PartitionBase.CorrectionRule)
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: SetValue(Int32, Single, PartitionBase.CorrectionRule)
  nameWithType: PartitionBase.SetValue(Int32, Single, PartitionBase.CorrectionRule)
  fullName: RandomToolbox.PartitionBase.SetValue(System.Int32, System.Single, RandomToolbox.PartitionBase.CorrectionRule)
  type: Method
  source:
    id: SetValue
    path: ''
    startLine: 635
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\n\n"
  example: []
  syntax:
    content: public void SetValue(int index, float value, PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: value
      type: System.Single
      description: ''
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: ''
    content.vb: Public Sub SetValue(index As Integer, value As Single, rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll)
  overload: RandomToolbox.PartitionBase.SetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  commentId: M:RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  id: CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: CorrectPartition(PartitionBase.CorrectionRule, Int32, Single, Single)
  nameWithType: PartitionBase.CorrectPartition(PartitionBase.CorrectionRule, Int32, Single, Single)
  fullName: RandomToolbox.PartitionBase.CorrectPartition(RandomToolbox.PartitionBase.CorrectionRule, System.Int32, System.Single, System.Single)
  type: Method
  source:
    id: CorrectPartition
    path: ''
    startLine: 649
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\n\n"
  example: []
  syntax:
    content: public void CorrectPartition(PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll, int lastEditedValueIndex = 0, float minValue = 0F, float maxValue = 1F)
    parameters:
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: ''
    - id: lastEditedValueIndex
      type: System.Int32
      description: ''
    - id: minValue
      type: System.Single
      description: ''
    - id: maxValue
      type: System.Single
      description: ''
    content.vb: Public Sub CorrectPartition(rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll, lastEditedValueIndex As Integer = 0, minValue As Single = 0F, maxValue As Single = 1F)
  overload: RandomToolbox.PartitionBase.CorrectPartition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  commentId: M:RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  id: DefaultPartitionCorrection(System.Single[])
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: DefaultPartitionCorrection(Single[])
  nameWithType: PartitionBase.DefaultPartitionCorrection(Single[])
  fullName: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single[])
  type: Method
  source:
    id: DefaultPartitionCorrection
    path: ''
    startLine: 685
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nCheck a partition, and apply Default correction\n"
  example: []
  syntax:
    content: public static void DefaultPartitionCorrection(float[] values)
    parameters:
    - id: values
      type: System.Single[]
      description: an array of values
    content.vb: Public Shared Sub DefaultPartitionCorrection(values As Single())
  overload: RandomToolbox.PartitionBase.DefaultPartitionCorrection*
  nameWithType.vb: PartitionBase.DefaultPartitionCorrection(Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RandomToolbox.PartitionBase.DefaultPartitionCorrection(System.Single())
  name.vb: DefaultPartitionCorrection(Single())
- uid: RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  commentId: M:RandomToolbox.PartitionBase.CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  id: CorrectPartition(System.Single[],RandomToolbox.PartitionBase.CorrectionRule,System.Int32,System.Single,System.Single)
  parent: RandomToolbox.PartitionBase
  langs:
  - csharp
  - vb
  name: CorrectPartition(Single[], PartitionBase.CorrectionRule, Int32, Single, Single)
  nameWithType: PartitionBase.CorrectPartition(Single[], PartitionBase.CorrectionRule, Int32, Single, Single)
  fullName: RandomToolbox.PartitionBase.CorrectPartition(System.Single[], RandomToolbox.PartitionBase.CorrectionRule, System.Int32, System.Single, System.Single)
  type: Method
  source:
    id: CorrectPartition
    path: ''
    startLine: 711
  assemblies:
  - cs.temp.dll
  namespace: RandomToolbox
  summary: "\nCorrect a partition if the sum of value is not equal to 1.0\n"
  example: []
  syntax:
    content: public static void CorrectPartition(float[] values, PartitionBase.CorrectionRule rule = PartitionBase.CorrectionRule.AdjustAll, int lastEditedValueIndex = 0, float minValue = 0F, float maxValue = 1F)
    parameters:
    - id: values
      type: System.Single[]
      description: values of the partition
    - id: rule
      type: RandomToolbox.PartitionBase.CorrectionRule
      description: the rule to use when editing values <xref href="RandomToolbox.PartitionBase.CorrectionRule" data-throw-if-not-resolved="false"></xref>
    - id: lastEditedValueIndex
      type: System.Int32
      description: specify the last edited value if you don&apos;t want it to be changed
    - id: minValue
      type: System.Single
      description: specify a mininum to use when editing partition values (can&apos;t be more than 1/n)
    - id: maxValue
      type: System.Single
      description: specify a maximum to use when editing partition values (can&apos;t be less than 1/n)
    content.vb: Public Shared Sub CorrectPartition(values As Single(), rule As PartitionBase.CorrectionRule = PartitionBase.CorrectionRule.AdjustAll, lastEditedValueIndex As Integer = 0, minValue As Single = 0F, maxValue As Single = 1F)
  overload: RandomToolbox.PartitionBase.CorrectPartition*
  nameWithType.vb: PartitionBase.CorrectPartition(Single(), PartitionBase.CorrectionRule, Int32, Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RandomToolbox.PartitionBase.CorrectPartition(System.Single(), RandomToolbox.PartitionBase.CorrectionRule, System.Int32, System.Single, System.Single)
  name.vb: CorrectPartition(Single(), PartitionBase.CorrectionRule, Int32, Single, Single)
references:
- uid: RandomToolbox
  commentId: N:RandomToolbox
  name: RandomToolbox
  nameWithType: RandomToolbox
  fullName: RandomToolbox
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RandomToolbox.PartitionBase._elements*
  commentId: Overload:RandomToolbox.PartitionBase._elements
  name: _elements
  nameWithType: PartitionBase._elements
  fullName: RandomToolbox.PartitionBase._elements
- uid: System.Collections.Generic.IReadOnlyList{RandomToolbox.PartitionBase.ElementBase}
  commentId: T:System.Collections.Generic.IReadOnlyList{RandomToolbox.PartitionBase.ElementBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PartitionBase.ElementBase>
  nameWithType: IReadOnlyList<PartitionBase.ElementBase>
  fullName: System.Collections.Generic.IReadOnlyList<RandomToolbox.PartitionBase.ElementBase>
  nameWithType.vb: IReadOnlyList(Of PartitionBase.ElementBase)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of RandomToolbox.PartitionBase.ElementBase)
  name.vb: IReadOnlyList(Of PartitionBase.ElementBase)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RandomToolbox.PartitionBase.ElementBase
    name: PartitionBase.ElementBase
    nameWithType: PartitionBase.ElementBase
    fullName: RandomToolbox.PartitionBase.ElementBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RandomToolbox.PartitionBase.ElementBase
    name: PartitionBase.ElementBase
    nameWithType: PartitionBase.ElementBase
    fullName: RandomToolbox.PartitionBase.ElementBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: RandomToolbox.PartitionBase.IsCorrect*
  commentId: Overload:RandomToolbox.PartitionBase.IsCorrect
  name: IsCorrect
  nameWithType: PartitionBase.IsCorrect
  fullName: RandomToolbox.PartitionBase.IsCorrect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RandomToolbox.PartitionBase.GetIndex*
  commentId: Overload:RandomToolbox.PartitionBase.GetIndex
  name: GetIndex
  nameWithType: PartitionBase.GetIndex
  fullName: RandomToolbox.PartitionBase.GetIndex
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RandomToolbox.PartitionBase.SetValues*
  commentId: Overload:RandomToolbox.PartitionBase.SetValues
  name: SetValues
  nameWithType: PartitionBase.SetValues
  fullName: RandomToolbox.PartitionBase.SetValues
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RandomToolbox.PartitionBase.CorrectionRule
  commentId: T:RandomToolbox.PartitionBase.CorrectionRule
  parent: RandomToolbox
  name: PartitionBase.CorrectionRule
  nameWithType: PartitionBase.CorrectionRule
  fullName: RandomToolbox.PartitionBase.CorrectionRule
- uid: RandomToolbox.PartitionBase.SetValue*
  commentId: Overload:RandomToolbox.PartitionBase.SetValue
  name: SetValue
  nameWithType: PartitionBase.SetValue
  fullName: RandomToolbox.PartitionBase.SetValue
- uid: RandomToolbox.PartitionBase.CorrectPartition*
  commentId: Overload:RandomToolbox.PartitionBase.CorrectPartition
  name: CorrectPartition
  nameWithType: PartitionBase.CorrectPartition
  fullName: RandomToolbox.PartitionBase.CorrectPartition
- uid: RandomToolbox.PartitionBase.DefaultPartitionCorrection*
  commentId: Overload:RandomToolbox.PartitionBase.DefaultPartitionCorrection
  name: DefaultPartitionCorrection
  nameWithType: PartitionBase.DefaultPartitionCorrection
  fullName: RandomToolbox.PartitionBase.DefaultPartitionCorrection
